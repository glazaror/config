# Configuration kafka consumers and producers will be on bitbucket
# the start configuration kafka
atlas:
  event:
    kafka:
      header:
        required:
          enabled: true
          names:
            - app-code
            - caller-name
            - Request-ID
            - Authorization
      active: true
      schema-registry-url: "http://localhost:8080"
      producers:
        default: # this properties will remove to application.yml generic
          properties: # all kafka properties
            bootstrap.servers: localhost:9092
            auto.offset.reset: earliest
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: org.apache.kafka.common.serialization.ByteArraySerializer
            acks: all
            retries: 1000
            batch-size: 16384
            buffer-memory: 33554432
            enable.idempotence: true
            # ssl
            security.protocol: PLAINTEXT # must be SSL
            ssl.keystore.location: "/opt/security/alexandria-truststore-kafka-dev.jks"
            ssl.keystore.password: HzOn8PjYzsKcAxmvgBfe
            ssl.key.password: HzOn8PjYzsKcAxmvgBfe
            ssl.truststore.location: "/opt/security/alexandria-truststore-kafka-dev.jks"
            ssl.truststore.password: HzOn8PjYzsKcAxmvgBfe
            ssl.keystore.type: JKS
            ssl.truststore.type: JKS
            ssl.secure.random.implementation: SHA1PRNG
            ssl.endpoint.identification.algorithm: ""
            max.block.ms: 3000
        producer-audit:
          topic: "queuing.audit"
          schema:
            version: "1.0"
            valueSchema: "{\"type\":\"record\",\"name\":\"AvroAudit\",\"namespace\":\"com.bcp.atlas.core.starter.audit.model.avro\",\"fields\":[{\"name\":\"requestId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"channel\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"result\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"errorReason\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"metadata\",\"type\":{\"type\":\"map\",\"values\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"avro.java.string\":\"String\"}}]}"
          properties:
            bootstrap.servers: "localhost:9092"
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: org.apache.kafka.common.serialization.ByteArraySerializer
            

application:
  atlas:
    cache:
      isLocal:
        default:
          expire-after: 3600 #Default duration in seconds
      audit:
        map:
          audit-metadata-cache: audit-metadata-cache
    # general obfuscation list
    obfuscation-rules:
      enabled: true
      default-regex: '.+'
      default-mask: '*****'
      sensitive-fields:
        - name: transactionId
          config[0]:
            regex: '^([\w\W]{2})[\w\W]+$'
            mask: '$1*******'
            active: true
          config[1]:
            regex: '\b(\d{3})\d+(\d{5})'
            mask: '$1******$2'
            active: true
        - name: officeID
          config[0]:
            regex: '^([\w\W]{2})[\w\W]+$'
            mask: '$1*******'
            active: true
        - name: cardNumber
          config[0]:
            regex: '\b(\d{3})\d+(\d{5})'
            mask: '$1******$2'
            active: true
        - name: personId
        - name: destinyPersonId
          config[0]:
            handler-bean-id: destinyPersonIdCustomHandler
            active: true
        - name: anotherOfficeID
          config[0]:
            handler-bean-id: generalCustomOfficeHandler
            active: true
    audit:
      backPressureBufferCapacity: 10000
      excludePathPatterns:
        - /swagger-resources/**
        - /webjars/swagger-resources/**
        - /webjars/springfox-swagger-ui/**
        - /error
        - /swagger-ui.html/**
        - /swagger-ui.html
        - /swagger2.json
        - /favicon.ico
        - /actuator/
      enabled: true
      endpoints:
        - path: /auditmetadata
          method: GET
          type: readPersonData
          metadataAttributes:
            - sourcePath: request.header.Request-ID
              field: header-requestId
            - sourcePath: response.body.lastName
              field: person-response-lastName
            - sourcePath: response.body.addresses[2].location
              field: person-response-principalAddress
          sensitiveFields:
            - name: cardNumber
              config[0]:
                regex: '\b(\d{3})\d+(\d{5})'
                mask: '$1XXXXXX$2'
                active: true

            - name: transactionId

            - name: currency
              config[0]:
                regex: '.+'
                mask: 'ZZZ'
                active: true

            - name: officeID

            - name: personId

            - name: destinyPersonId

            - name: anotherOfficeID
              config[0]:
                handler-bean-id: specificCustomOfficeHandler
                active: true
                
    http:
      header:
        defaults:
          -
            name: Authorization
            required: false
          -
            name: Request-ID
            required: true
          -
            name: request-date
          -
            name: app-code
          -
            name: client-code
          -
            name: caller-name
          -
            name: org-code
          -
            name: user-code
          -
            name: login
          -
            name: tio-aux
  
  #should be in message hub specific properties
  http-client:
    atlas:
      support:
        message-hub:
          component:
            default: pendiente
            
message-hub:
  receiveTimeout: 40000
  message:
    time-to-live: 4600000
  ibmQueueServers:
    servers:
      - 
        name: server1
        host: host1
        port: 80081
        username: userx1
        password: passw1
        sessionCacheSize: 10
        queueManager: generalManager
        channel: channel1
        active: true
        
      - 
        name: server2
        host: host2
        port: 80082
        username: userx2
        password: passw2
        sessionCacheSize: 10
        queueManager: generalManager
        channel: channel2
        active: true
        
  healthCheck:
    active: true
    cron: 1
    timeout: 2000
    testQueue: testQueue